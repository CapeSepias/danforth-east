# -*- coding: utf-8 -*-

#
# Copyright Adam Pritchard 2014
# MIT License : http://adampritchard.mit-license.org/
#

"""Configuration values that we don't want to check into source control.
"""

#
# Organization info
#

MASTER_EMAIL_ADDRESS = 'your-gmail-account@gmail.com'
MASTER_EMAIL_SEND_ADDRESS = 'Your Neighbourhood Community Association <%s>' % (MASTER_EMAIL_ADDRESS,)

ORGANIZATION_MAILING_ADDRESS_HTML = '''
    Org Name<br>
    99 Street Ave<br>
    Toronto, ON H0H 0H0
    '''

ORGANIZATION_CHEQUES_PAYABLE_NAME = 'Org Full Name'

MEMBERSHIP_FEE_DISPLAY = '$10'
MEMBERSHIP_FEE_FLOAT = 10.00


#
# Project set-up
#

# Set this to None to allow sending to all addresses. Set to empty list to
# prevent sending to any address.
ALLOWED_EMAIL_TO_ADDRESSES = ['your-email@gmail.com',
                              'another-tester@hotmail.com',
                              ]

# This isn't actually used at this time.
ALLOWED_EMBED_REFERERS = ['site-that-will-embed-form.com',
                          ]

# If your GAE app is at "myapp.appspot.com", then you can set up these creds at:
# https://console.developers.google.com/project/apps~myapp/apiui/credential
# You need one each of service account (used for spreadsheets API calls), server
# API key (used for geocoding API calls), and browser API key (used for maps
# API calls).
# If you get a service account key in P12 format, you'll need to convert it to
# PEM format. I think the command is something like this:
# $ openssl pkcs12 -in key.p12 -out key.pem -nodes -clcerts
SERVICE_ACCOUNT_PEM_FILE_PATH = 'privatekey.pem'
SERVICE_ACCOUNT_EMAIL = '1234-blah-abcd@developer.gserviceaccount.com'
GOOGLE_SERVER_API_KEY = 'abc123'
GOOGLE_BROWSER_API_KEY = 'xyz789'


#
# Payment and PayPal info
#

# This is the URL that we'll send the user to so they can pay.
# You get this URL when you use the Paypal web interface to create a payment
# button. (We don't actually use the button <form>.)
# NOTE: When testing, make sure this is www.sandbox.paypal.com!
PAYPAL_PAYMENT_URL = 'https://www.sandbox.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=ABC123'
PAYPAL_PAYMENT_URL += '&invoice=%s'
# When testing, this will probably be "youremail-facilitator@gmail.com"
PAYPAL_TXN_receiver_email = 'youremail@gmail.com'
# This is set in the PayPal button configuration
PAYPAL_TXN_item_name = 'DECA Membership - 1 year'


#
# MailChimp info
#

MAILCHIMP_ENABLED = True
MAILCHIMP_API_KEY = 'abc123'
MAILCHIMP_MEMBERS_LIST_ID = 'abc123'
MAILCHIMP_MEMBER_TYPE_MERGE_ID = 'MMBR_TYPE'
MAILCHIMP_MEMBER_TYPE_MEMBER = 'Member'
MAILCHIMP_MEMBER_TYPE_VOLUNTEER = 'Volunteer'


#
# Spreadsheet keys
#
# Note: Figuring out the key for the first worksheet is a hassle (unlike the
# spreadsheet key it's not shown in the URL). You can our
# gapps._get_first_worksheet_id() function to help.

AUTHORIZED_SPREADSHEET_KEY = 'abc123'
AUTHORIZED_WORKSHEET_KEY = 'od6'

VOLUNTEER_INTERESTS_SPREADSHEET_KEY = 'abc123'
VOLUNTEER_INTERESTS_WORKSHEET_KEY = 'od6'

SKILLS_CATEGORIES_SPREADSHEET_KEY = 'abc123'
SKILLS_CATEGORIES_WORKSHEET_KEY = 'od6'

MEMBERS_SPREADSHEET_KEY = 'abc123'
MEMBERS_WORKSHEET_KEY = 'od6'

VOLUNTEERS_SPREADSHEET_KEY = 'abc123'
VOLUNTEERS_WORKSHEET_KEY = 'od6'
